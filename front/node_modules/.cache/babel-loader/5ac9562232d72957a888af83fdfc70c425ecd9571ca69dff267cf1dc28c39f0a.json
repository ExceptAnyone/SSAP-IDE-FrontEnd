{"ast":null,"code":"// 저장 클릭시 api 호출 함수\nimport axios from \"axios\";\nexport const saveFileAPI = async ({\n  containerId,\n  fileId,\n  path,\n  fileName,\n  content\n}) => {\n  const API_URL = `/ide/${containerId}/files/${fileId}`;\n  try {\n    const response = await axios.put(API_URL, {\n      path,\n      fileName,\n      content\n    });\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error(response.data.message);\n    }\n  } catch (error) {\n    if (error.response) {\n      switch (error.response.status) {\n        case 400:\n          throw new Error(\"파라미터 필수 항목이 누락되었거나 형식이 잘못되었습니다.\");\n        case 404:\n          throw new Error(\"지정된 경로 또는 해당하는 파일이 존재하지 않습니다.\");\n        case 409:\n          throw new Error(\"동일한 이름의 파일이 이미 해당 경로에 존재합니다.\");\n        case 500:\n        default:\n          throw new Error(\"요청을 처리하는 중에 서버에서 오류가 발생했습니다.\");\n      }\n    } else {\n      throw error; // network error 등 axios 외부의 오류에 대한 처리\n    }\n  }\n};","map":{"version":3,"names":["axios","saveFileAPI","containerId","fileId","path","fileName","content","API_URL","response","put","status","data","Error","message","error"],"sources":["/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/api/ideAPI/saveFileAPI.jsx"],"sourcesContent":["// 저장 클릭시 api 호출 함수\nimport axios from \"axios\";\n\nexport const saveFileAPI = async ({\n  containerId,\n  fileId,\n  path,\n  fileName,\n  content,\n}) => {\n  const API_URL = `/ide/${containerId}/files/${fileId}`;\n\n  try {\n    const response = await axios.put(API_URL, { path, fileName, content });\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error(response.data.message);\n    }\n  } catch (error) {\n    if (error.response) {\n      switch (error.response.status) {\n        case 400:\n          throw new Error(\n            \"파라미터 필수 항목이 누락되었거나 형식이 잘못되었습니다.\",\n          );\n        case 404:\n          throw new Error(\n            \"지정된 경로 또는 해당하는 파일이 존재하지 않습니다.\",\n          );\n        case 409:\n          throw new Error(\"동일한 이름의 파일이 이미 해당 경로에 존재합니다.\");\n        case 500:\n        default:\n          throw new Error(\"요청을 처리하는 중에 서버에서 오류가 발생했습니다.\");\n      }\n    } else {\n      throw error; // network error 등 axios 외부의 오류에 대한 처리\n    }\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAO;EAChCC,WAAW;EACXC,MAAM;EACNC,IAAI;EACJC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,MAAMC,OAAO,GAAI,QAAOL,WAAY,UAASC,MAAO,EAAC;EAErD,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACF,OAAO,EAAE;MAAEH,IAAI;MAAEC,QAAQ;MAAEC;IAAQ,CAAC,CAAC;IAEtE,IAAIE,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOF,QAAQ,CAACG,IAAI;IACtB,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACE,OAAO,CAAC;IACxC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACN,QAAQ,EAAE;MAClB,QAAQM,KAAK,CAACN,QAAQ,CAACE,MAAM;QAC3B,KAAK,GAAG;UACN,MAAM,IAAIE,KAAK,CACb,iCACF,CAAC;QACH,KAAK,GAAG;UACN,MAAM,IAAIA,KAAK,CACb,+BACF,CAAC;QACH,KAAK,GAAG;UACN,MAAM,IAAIA,KAAK,CAAC,8BAA8B,CAAC;QACjD,KAAK,GAAG;QACR;UACE,MAAM,IAAIA,KAAK,CAAC,8BAA8B,CAAC;MACnD;IACF,CAAC,MAAM;MACL,MAAME,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}