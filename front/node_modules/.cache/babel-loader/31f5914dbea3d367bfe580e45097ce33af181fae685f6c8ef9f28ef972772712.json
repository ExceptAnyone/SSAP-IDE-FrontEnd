{"ast":null,"code":"var _jsxFileName = \"/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/page/main/MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Test from \"./Test\";\nimport Header from \"../../components/header/Header\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport \"./MainPage.css\";\nimport Footer from \"../../components/footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainPage() {\n  _s();\n  const [originalPosts, setOriginalPosts] = useState([]); // 초기 글 목록을 저장하는 상태 변수\n  const [posts, setPosts] = useState([]); // 글 목록을 상태로 관리\n  const addPost = post => {\n    const updatedPosts = [...posts, post];\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n  useEffect(() => {\n    // 페이지가 로드될 때 로컬 스토리지에서 데이터를 읽어옴\n    const storedPosts = JSON.parse(localStorage.getItem(\"posts\")) || [];\n    setPosts(storedPosts);\n  }, []);\n  const deletePost = index => {\n    // 해당 인덱스의 글을 삭제\n    const updatedPosts = [...posts];\n    updatedPosts.splice(index, 1);\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n  const editPost = (index, updatedPost) => {\n    // 해당 인덱스의 글을 수정\n    const updatedPosts = [...posts];\n    updatedPosts[index] = updatedPost;\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const handleSearch = e => {\n    const searchText = e.target.value.toLowerCase(); // 검색어를 소문자로 통일\n    setSearchTerm(searchText);\n    if (searchText === \"\") {\n      // 검색어가 비어있을 때, 초기 글 목록을 보여줍니다.\n      setPosts(originalPosts);\n    } else {\n      // 검색어에 해당하는 게시물만 필터링하여 업데이트합니다.\n      const filteredPosts = originalPosts.filter(post => post.title.toLowerCase().includes(searchText) // 게시물의 title도 소문자로 통일하여 비교\n      );\n\n      setPosts(filteredPosts);\n    }\n  };\n  useEffect(() => {\n    // 페이지가 로드될 때 로컬 스토리지에서 데이터를 읽어와 originalPosts 상태에 설정합니다.\n    const storedPosts = JSON.parse(localStorage.getItem(\"posts\")) || [];\n    setPosts(storedPosts);\n    setOriginalPosts(storedPosts); // 초기 글 목록을 설정합니다.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    cl: true,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      link: \"/containers\",\n      name: \"\\uC0C8 \\uCEE8\\uD14C\\uC774\\uB108\",\n      icon: \"\\uBAA8\\uB4E0 \\uCEE8\\uD14C\\uC774\\uB108\",\n      MainPage: MainPage,\n      addPost: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-hd\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(AiOutlineSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search\",\n        type: \"text\",\n        placeholder: \"\\uCEE8\\uD14C\\uC774\\uB108 \\uC774\\uB984\",\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-list\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Test, {\n        posts: [post],\n        deletePost: deletePost\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"yeYuzdW/QLvXw8uZX6/j8vvr5zA=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Test","Header","AiOutlineSearch","Footer","jsxDEV","_jsxDEV","MainPage","_s","originalPosts","setOriginalPosts","posts","setPosts","addPost","post","updatedPosts","localStorage","setItem","JSON","stringify","storedPosts","parse","getItem","deletePost","index","splice","editPost","updatedPost","searchTerm","setSearchTerm","handleSearch","e","searchText","target","value","toLowerCase","filteredPosts","filter","title","includes","cl","children","link","name","icon","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","map","_c","$RefreshReg$"],"sources":["/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/page/main/MainPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Test from \"./Test\";\nimport Header from \"../../components/header/Header\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport \"./MainPage.css\";\nimport Footer from \"../../components/footer/Footer\";\n\nexport default function MainPage() {\n  const [originalPosts, setOriginalPosts] = useState([]); // 초기 글 목록을 저장하는 상태 변수\n  const [posts, setPosts] = useState([]); // 글 목록을 상태로 관리\n  const addPost = (post) => {\n    const updatedPosts = [...posts, post];\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n  useEffect(() => {\n    // 페이지가 로드될 때 로컬 스토리지에서 데이터를 읽어옴\n    const storedPosts = JSON.parse(localStorage.getItem(\"posts\")) || [];\n    setPosts(storedPosts);\n  }, []);\n\n  const deletePost = (index) => {\n    // 해당 인덱스의 글을 삭제\n    const updatedPosts = [...posts];\n    updatedPosts.splice(index, 1);\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n\n  const editPost = (index, updatedPost) => {\n    // 해당 인덱스의 글을 수정\n    const updatedPosts = [...posts];\n    updatedPosts[index] = updatedPost;\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleSearch = (e) => {\n    const searchText = e.target.value.toLowerCase(); // 검색어를 소문자로 통일\n    setSearchTerm(searchText);\n\n    if (searchText === \"\") {\n      // 검색어가 비어있을 때, 초기 글 목록을 보여줍니다.\n      setPosts(originalPosts);\n    } else {\n      // 검색어에 해당하는 게시물만 필터링하여 업데이트합니다.\n      const filteredPosts = originalPosts.filter(\n        (post) => post.title.toLowerCase().includes(searchText), // 게시물의 title도 소문자로 통일하여 비교\n      );\n      setPosts(filteredPosts);\n    }\n  };\n\n  useEffect(() => {\n    // 페이지가 로드될 때 로컬 스토리지에서 데이터를 읽어와 originalPosts 상태에 설정합니다.\n    const storedPosts = JSON.parse(localStorage.getItem(\"posts\")) || [];\n    setPosts(storedPosts);\n    setOriginalPosts(storedPosts); // 초기 글 목록을 설정합니다.\n  }, []);\n\n  return (\n    <div cl>\n      <Header\n        link=\"/containers\"\n        name=\"새 컨테이너\"\n        icon=\"모든 컨테이너\"\n        MainPage={MainPage}\n        addPost={addPost}\n      />\n      <div className=\"login-hd\">\n        <button>\n          <AiOutlineSearch />\n        </button>\n        <input\n          className=\"search\"\n          type=\"text\"\n          placeholder=\"컨테이너 이름\"\n          onChange={handleSearch}\n        ></input>\n      </div>\n      <div className=\"test-list\">\n        {posts.map((post, index) => (\n          <Test key={index} posts={[post]} deletePost={deletePost} />\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}