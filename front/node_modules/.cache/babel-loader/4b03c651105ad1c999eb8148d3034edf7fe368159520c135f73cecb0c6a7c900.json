{"ast":null,"code":"import _toConsumableArray from \"/Users/seongsuk/SSAP-IDE-FrontEnd/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createClass from \"/Users/seongsuk/SSAP-IDE-FrontEnd/front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/seongsuk/SSAP-IDE-FrontEnd/front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nimport { PreviewListImpl } from './PreviewListImpl';\nvar _current = /*#__PURE__*/new WeakMap();\nvar _previews = /*#__PURE__*/new WeakMap();\nvar _backends = /*#__PURE__*/new WeakMap();\nvar _backendsList = /*#__PURE__*/new WeakMap();\nvar _nodes = /*#__PURE__*/new WeakMap();\nvar _createBackend = /*#__PURE__*/new WeakMap();\nvar _addEventListeners = /*#__PURE__*/new WeakMap();\nvar _removeEventListeners = /*#__PURE__*/new WeakMap();\nvar _backendSwitcher = /*#__PURE__*/new WeakMap();\nvar _callBackend = /*#__PURE__*/new WeakMap();\nvar _connectBackend = /*#__PURE__*/new WeakMap();\nexport var MultiBackendImpl = /*#__PURE__*/_createClass( /*private*/\n\n/*private*/\n\n/*private*/\n\n/*private*/\n\n/*private*/\nfunction MultiBackendImpl(_manager, _context, _options) {\n  var _this = this;\n  _classCallCheck(this, MultiBackendImpl);\n  _classPrivateFieldInitSpec(this, _current, {\n    writable: true,\n    value: void 0\n  });\n  _classPrivateFieldInitSpec(this, _previews, {\n    writable: true,\n    value: void 0\n  });\n  _classPrivateFieldInitSpec(this, _backends, {\n    writable: true,\n    value: void 0\n  });\n  _classPrivateFieldInitSpec(this, _backendsList, {\n    writable: true,\n    value: void 0\n  });\n  _classPrivateFieldInitSpec(this, _nodes, {\n    writable: true,\n    value: void 0\n  });\n  _classPrivateFieldInitSpec(this, _createBackend, {\n    writable: true,\n    value: function value(manager, context, backend) {\n      var _backend$preview, _backend$skipDispatch;\n      if (!backend.backend) {\n        throw new Error(\"You must specify a 'backend' property in your Backend entry: \".concat(JSON.stringify(backend)));\n      }\n      var instance = backend.backend(manager, context, backend.options);\n      var id = backend.id; // Try to infer an `id` if one doesn't exist\n\n      var inferName = !backend.id && instance && instance.constructor;\n      if (inferName) {\n        id = instance.constructor.name;\n      }\n      if (!id) {\n        throw new Error(\"You must specify an 'id' property in your Backend entry: \".concat(JSON.stringify(backend), \"\\n        see this guide: https://github.com/louisbrunner/dnd-multi-backend/tree/master/packages/react-dnd-multi-backend#migrating-from-5xx\"));\n      } else if (inferName) {\n        console.warn(\n        // eslint-disable-line no-console\n        \"Deprecation notice: You are using a pipeline which doesn't include backends' 'id'.\\n        This might be unsupported in the future, please specify 'id' explicitely for every backend.\");\n      }\n      if (_classPrivateFieldGet(_this, _backends)[id]) {\n        throw new Error(\"You must specify a unique 'id' property in your Backend entry:\\n        \".concat(JSON.stringify(backend), \" (conflicts with: \").concat(JSON.stringify(_classPrivateFieldGet(_this, _backends)[id]), \")\"));\n      }\n      return {\n        id: id,\n        instance: instance,\n        preview: (_backend$preview = backend.preview) !== null && _backend$preview !== void 0 ? _backend$preview : false,\n        transition: backend.transition,\n        skipDispatchOnTransition: (_backend$skipDispatch = backend.skipDispatchOnTransition) !== null && _backend$skipDispatch !== void 0 ? _backend$skipDispatch : false\n      };\n    }\n  });\n  _defineProperty(this, \"setup\", function () {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    if (MultiBackendImpl.isSetUp) {\n      throw new Error('Cannot have two MultiBackends at the same time.');\n    }\n    MultiBackendImpl.isSetUp = true;\n    _classPrivateFieldGet(_this, _addEventListeners).call(_this, window);\n    _classPrivateFieldGet(_this, _backends)[_classPrivateFieldGet(_this, _current)].instance.setup();\n  });\n  _defineProperty(this, \"teardown\", function () {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    MultiBackendImpl.isSetUp = false;\n    _classPrivateFieldGet(_this, _removeEventListeners).call(_this, window);\n    _classPrivateFieldGet(_this, _backends)[_classPrivateFieldGet(_this, _current)].instance.teardown();\n  });\n  _defineProperty(this, \"connectDragSource\", function (sourceId, node, options) {\n    return _classPrivateFieldGet(_this, _connectBackend).call(_this, 'connectDragSource', sourceId, node, options);\n  });\n  _defineProperty(this, \"connectDragPreview\", function (sourceId, node, options) {\n    return _classPrivateFieldGet(_this, _connectBackend).call(_this, 'connectDragPreview', sourceId, node, options);\n  });\n  _defineProperty(this, \"connectDropTarget\", function (sourceId, node, options) {\n    return _classPrivateFieldGet(_this, _connectBackend).call(_this, 'connectDropTarget', sourceId, node, options);\n  });\n  _defineProperty(this, \"profile\", function () {\n    return _classPrivateFieldGet(_this, _backends)[_classPrivateFieldGet(_this, _current)].instance.profile();\n  });\n  _defineProperty(this, \"previewEnabled\", function () {\n    return _classPrivateFieldGet(_this, _backends)[_classPrivateFieldGet(_this, _current)].preview;\n  });\n  _defineProperty(this, \"previewsList\", function () {\n    return _classPrivateFieldGet(_this, _previews);\n  });\n  _defineProperty(this, \"backendsList\", function () {\n    return _classPrivateFieldGet(_this, _backendsList);\n  });\n  _classPrivateFieldInitSpec(this, _addEventListeners, {\n    writable: true,\n    value: function value(target) {\n      _classPrivateFieldGet(_this, _backendsList).forEach(function (backend) {\n        if (backend.transition) {\n          target.addEventListener(backend.transition.event, _classPrivateFieldGet(_this, _backendSwitcher));\n        }\n      });\n    }\n  });\n  _classPrivateFieldInitSpec(this, _removeEventListeners, {\n    writable: true,\n    value: function value(target) {\n      _classPrivateFieldGet(_this, _backendsList).forEach(function (backend) {\n        if (backend.transition) {\n          target.removeEventListener(backend.transition.event, _classPrivateFieldGet(_this, _backendSwitcher));\n        }\n      });\n    }\n  });\n  _classPrivateFieldInitSpec(this, _backendSwitcher, {\n    writable: true,\n    value: function value(event) {\n      var oldBackend = _classPrivateFieldGet(_this, _current);\n      _classPrivateFieldGet(_this, _backendsList).some(function (backend) {\n        if (backend.id !== _classPrivateFieldGet(_this, _current) && backend.transition && backend.transition.check(event)) {\n          _classPrivateFieldSet(_this, _current, backend.id);\n          return true;\n        }\n        return false;\n      });\n      if (_classPrivateFieldGet(_this, _current) !== oldBackend) {\n        var _event$target;\n        _classPrivateFieldGet(_this, _backends)[oldBackend].instance.teardown();\n        Object.keys(_classPrivateFieldGet(_this, _nodes)).forEach(function (id) {\n          var _classPrivateFieldGet2;\n          var node = _classPrivateFieldGet(_this, _nodes)[id];\n          node.unsubscribe();\n          node.unsubscribe = (_classPrivateFieldGet2 = _classPrivateFieldGet(_this, _callBackend)).call.apply(_classPrivateFieldGet2, [_this, node.func].concat(_toConsumableArray(node.args)));\n        });\n        _classPrivateFieldGet(_this, _previews).backendChanged(_this);\n        var newBackend = _classPrivateFieldGet(_this, _backends)[_classPrivateFieldGet(_this, _current)];\n        newBackend.instance.setup();\n        if (newBackend.skipDispatchOnTransition) {\n          return;\n        }\n        var Class = event.constructor;\n        var newEvent = new Class(event.type, event);\n        (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.dispatchEvent(newEvent);\n      }\n    }\n  });\n  _classPrivateFieldInitSpec(this, _callBackend, {\n    writable: true,\n    value: function value(func, sourceId, node, options) {\n      return _classPrivateFieldGet(_this, _backends)[_classPrivateFieldGet(_this, _current)].instance[func](sourceId, node, options);\n    }\n  });\n  _classPrivateFieldInitSpec(this, _connectBackend, {\n    writable: true,\n    value: function value(func, sourceId, node, options) {\n      var nodeId = \"\".concat(func, \"_\").concat(sourceId);\n      var unsubscribe = _classPrivateFieldGet(_this, _callBackend).call(_this, func, sourceId, node, options);\n      _classPrivateFieldGet(_this, _nodes)[nodeId] = {\n        func: func,\n        args: [sourceId, node, options],\n        unsubscribe: unsubscribe\n      };\n      return function () {\n        _classPrivateFieldGet(_this, _nodes)[nodeId].unsubscribe();\n        delete _classPrivateFieldGet(_this, _nodes)[nodeId];\n      };\n    }\n  });\n  if (!_options || !_options.backends || _options.backends.length < 1) {\n    throw new Error(\"You must specify at least one Backend, if you are coming from 2.x.x (or don't understand this error)\\n        see this guide: https://github.com/louisbrunner/dnd-multi-backend/tree/master/packages/react-dnd-multi-backend#migrating-from-2xx\");\n  }\n  _classPrivateFieldSet(this, _previews, new PreviewListImpl());\n  _classPrivateFieldSet(this, _backends, {});\n  _classPrivateFieldSet(this, _backendsList, []);\n  _options.backends.forEach(function (backend) {\n    var backendRecord = _classPrivateFieldGet(_this, _createBackend).call(_this, _manager, _context, backend);\n    _classPrivateFieldGet(_this, _backends)[backendRecord.id] = backendRecord;\n    _classPrivateFieldGet(_this, _backendsList).push(backendRecord);\n  });\n  _classPrivateFieldSet(this, _current, _classPrivateFieldGet(this, _backendsList)[0].id);\n  _classPrivateFieldSet(this, _nodes, {});\n});\n_defineProperty(MultiBackendImpl, \"isSetUp\", false);","map":{"version":3,"names":["_classPrivateFieldInitSpec","obj","privateMap","value","_checkPrivateRedeclaration","set","privateCollection","has","TypeError","_defineProperty","key","Object","defineProperty","enumerable","configurable","writable","_classPrivateFieldGet","receiver","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorGet","get","call","_classPrivateFieldSet","_classApplyDescriptorSet","action","PreviewListImpl","_current","WeakMap","_previews","_backends","_backendsList","_nodes","_createBackend","_addEventListeners","_removeEventListeners","_backendSwitcher","_callBackend","_connectBackend","MultiBackendImpl","_createClass","_manager","_context","_options","_this","_classCallCheck","manager","context","backend","_backend$preview","_backend$skipDispatch","Error","concat","JSON","stringify","instance","options","id","inferName","constructor","name","console","warn","preview","transition","skipDispatchOnTransition","window","isSetUp","setup","teardown","sourceId","node","profile","target","forEach","addEventListener","event","removeEventListener","oldBackend","some","check","_event$target","keys","_classPrivateFieldGet2","unsubscribe","apply","func","_toConsumableArray","args","backendChanged","newBackend","Class","newEvent","type","dispatchEvent","nodeId","backends","length","backendRecord","push"],"sources":["/Users/seongsuk/SSAP-IDE-FrontEnd/front/node_modules/dnd-multi-backend/dist/esm/MultiBackendImpl.js"],"sourcesContent":["function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\n\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n\nimport { PreviewListImpl } from './PreviewListImpl';\n\nvar _current = /*#__PURE__*/new WeakMap();\n\nvar _previews = /*#__PURE__*/new WeakMap();\n\nvar _backends = /*#__PURE__*/new WeakMap();\n\nvar _backendsList = /*#__PURE__*/new WeakMap();\n\nvar _nodes = /*#__PURE__*/new WeakMap();\n\nvar _createBackend = /*#__PURE__*/new WeakMap();\n\nvar _addEventListeners = /*#__PURE__*/new WeakMap();\n\nvar _removeEventListeners = /*#__PURE__*/new WeakMap();\n\nvar _backendSwitcher = /*#__PURE__*/new WeakMap();\n\nvar _callBackend = /*#__PURE__*/new WeakMap();\n\nvar _connectBackend = /*#__PURE__*/new WeakMap();\n\nexport class MultiBackendImpl {\n  /*private*/\n\n  /*private*/\n\n  /*private*/\n\n  /*private*/\n\n  /*private*/\n  constructor(_manager, _context, _options) {\n    _classPrivateFieldInitSpec(this, _current, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _previews, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _backends, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _backendsList, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _nodes, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _createBackend, {\n      writable: true,\n      value: (manager, context, backend) => {\n        var _backend$preview, _backend$skipDispatch;\n\n        if (!backend.backend) {\n          throw new Error(\"You must specify a 'backend' property in your Backend entry: \".concat(JSON.stringify(backend)));\n        }\n\n        const instance = backend.backend(manager, context, backend.options);\n        let id = backend.id; // Try to infer an `id` if one doesn't exist\n\n        const inferName = !backend.id && instance && instance.constructor;\n\n        if (inferName) {\n          id = instance.constructor.name;\n        }\n\n        if (!id) {\n          throw new Error(\"You must specify an 'id' property in your Backend entry: \".concat(JSON.stringify(backend), \"\\n        see this guide: https://github.com/louisbrunner/dnd-multi-backend/tree/master/packages/react-dnd-multi-backend#migrating-from-5xx\"));\n        } else if (inferName) {\n          console.warn( // eslint-disable-line no-console\n          \"Deprecation notice: You are using a pipeline which doesn't include backends' 'id'.\\n        This might be unsupported in the future, please specify 'id' explicitely for every backend.\");\n        }\n\n        if (_classPrivateFieldGet(this, _backends)[id]) {\n          throw new Error(\"You must specify a unique 'id' property in your Backend entry:\\n        \".concat(JSON.stringify(backend), \" (conflicts with: \").concat(JSON.stringify(_classPrivateFieldGet(this, _backends)[id]), \")\"));\n        }\n\n        return {\n          id,\n          instance,\n          preview: (_backend$preview = backend.preview) !== null && _backend$preview !== void 0 ? _backend$preview : false,\n          transition: backend.transition,\n          skipDispatchOnTransition: (_backend$skipDispatch = backend.skipDispatchOnTransition) !== null && _backend$skipDispatch !== void 0 ? _backend$skipDispatch : false\n        };\n      }\n    });\n\n    _defineProperty(this, \"setup\", () => {\n      if (typeof window === 'undefined') {\n        return;\n      }\n\n      if (MultiBackendImpl.isSetUp) {\n        throw new Error('Cannot have two MultiBackends at the same time.');\n      }\n\n      MultiBackendImpl.isSetUp = true;\n\n      _classPrivateFieldGet(this, _addEventListeners).call(this, window);\n\n      _classPrivateFieldGet(this, _backends)[_classPrivateFieldGet(this, _current)].instance.setup();\n    });\n\n    _defineProperty(this, \"teardown\", () => {\n      if (typeof window === 'undefined') {\n        return;\n      }\n\n      MultiBackendImpl.isSetUp = false;\n\n      _classPrivateFieldGet(this, _removeEventListeners).call(this, window);\n\n      _classPrivateFieldGet(this, _backends)[_classPrivateFieldGet(this, _current)].instance.teardown();\n    });\n\n    _defineProperty(this, \"connectDragSource\", (sourceId, node, options) => {\n      return _classPrivateFieldGet(this, _connectBackend).call(this, 'connectDragSource', sourceId, node, options);\n    });\n\n    _defineProperty(this, \"connectDragPreview\", (sourceId, node, options) => {\n      return _classPrivateFieldGet(this, _connectBackend).call(this, 'connectDragPreview', sourceId, node, options);\n    });\n\n    _defineProperty(this, \"connectDropTarget\", (sourceId, node, options) => {\n      return _classPrivateFieldGet(this, _connectBackend).call(this, 'connectDropTarget', sourceId, node, options);\n    });\n\n    _defineProperty(this, \"profile\", () => {\n      return _classPrivateFieldGet(this, _backends)[_classPrivateFieldGet(this, _current)].instance.profile();\n    });\n\n    _defineProperty(this, \"previewEnabled\", () => {\n      return _classPrivateFieldGet(this, _backends)[_classPrivateFieldGet(this, _current)].preview;\n    });\n\n    _defineProperty(this, \"previewsList\", () => {\n      return _classPrivateFieldGet(this, _previews);\n    });\n\n    _defineProperty(this, \"backendsList\", () => {\n      return _classPrivateFieldGet(this, _backendsList);\n    });\n\n    _classPrivateFieldInitSpec(this, _addEventListeners, {\n      writable: true,\n      value: target => {\n        _classPrivateFieldGet(this, _backendsList).forEach(backend => {\n          if (backend.transition) {\n            target.addEventListener(backend.transition.event, _classPrivateFieldGet(this, _backendSwitcher));\n          }\n        });\n      }\n    });\n\n    _classPrivateFieldInitSpec(this, _removeEventListeners, {\n      writable: true,\n      value: target => {\n        _classPrivateFieldGet(this, _backendsList).forEach(backend => {\n          if (backend.transition) {\n            target.removeEventListener(backend.transition.event, _classPrivateFieldGet(this, _backendSwitcher));\n          }\n        });\n      }\n    });\n\n    _classPrivateFieldInitSpec(this, _backendSwitcher, {\n      writable: true,\n      value: event => {\n        const oldBackend = _classPrivateFieldGet(this, _current);\n\n        _classPrivateFieldGet(this, _backendsList).some(backend => {\n          if (backend.id !== _classPrivateFieldGet(this, _current) && backend.transition && backend.transition.check(event)) {\n            _classPrivateFieldSet(this, _current, backend.id);\n\n            return true;\n          }\n\n          return false;\n        });\n\n        if (_classPrivateFieldGet(this, _current) !== oldBackend) {\n          var _event$target;\n\n          _classPrivateFieldGet(this, _backends)[oldBackend].instance.teardown();\n\n          Object.keys(_classPrivateFieldGet(this, _nodes)).forEach(id => {\n            const node = _classPrivateFieldGet(this, _nodes)[id];\n\n            node.unsubscribe();\n            node.unsubscribe = _classPrivateFieldGet(this, _callBackend).call(this, node.func, ...node.args);\n          });\n\n          _classPrivateFieldGet(this, _previews).backendChanged(this);\n\n          const newBackend = _classPrivateFieldGet(this, _backends)[_classPrivateFieldGet(this, _current)];\n\n          newBackend.instance.setup();\n\n          if (newBackend.skipDispatchOnTransition) {\n            return;\n          }\n\n          const Class = event.constructor;\n          const newEvent = new Class(event.type, event);\n          (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.dispatchEvent(newEvent);\n        }\n      }\n    });\n\n    _classPrivateFieldInitSpec(this, _callBackend, {\n      writable: true,\n      value: (func, sourceId, node, options) => {\n        return _classPrivateFieldGet(this, _backends)[_classPrivateFieldGet(this, _current)].instance[func](sourceId, node, options);\n      }\n    });\n\n    _classPrivateFieldInitSpec(this, _connectBackend, {\n      writable: true,\n      value: (func, sourceId, node, options) => {\n        const nodeId = \"\".concat(func, \"_\").concat(sourceId);\n\n        const unsubscribe = _classPrivateFieldGet(this, _callBackend).call(this, func, sourceId, node, options);\n\n        _classPrivateFieldGet(this, _nodes)[nodeId] = {\n          func,\n          args: [sourceId, node, options],\n          unsubscribe\n        };\n        return () => {\n          _classPrivateFieldGet(this, _nodes)[nodeId].unsubscribe();\n\n          delete _classPrivateFieldGet(this, _nodes)[nodeId];\n        };\n      }\n    });\n\n    if (!_options || !_options.backends || _options.backends.length < 1) {\n      throw new Error(\"You must specify at least one Backend, if you are coming from 2.x.x (or don't understand this error)\\n        see this guide: https://github.com/louisbrunner/dnd-multi-backend/tree/master/packages/react-dnd-multi-backend#migrating-from-2xx\");\n    }\n\n    _classPrivateFieldSet(this, _previews, new PreviewListImpl());\n\n    _classPrivateFieldSet(this, _backends, {});\n\n    _classPrivateFieldSet(this, _backendsList, []);\n\n    _options.backends.forEach(backend => {\n      const backendRecord = _classPrivateFieldGet(this, _createBackend).call(this, _manager, _context, backend);\n\n      _classPrivateFieldGet(this, _backends)[backendRecord.id] = backendRecord;\n\n      _classPrivateFieldGet(this, _backendsList).push(backendRecord);\n    });\n\n    _classPrivateFieldSet(this, _current, _classPrivateFieldGet(this, _backendsList)[0].id);\n\n    _classPrivateFieldSet(this, _nodes, {});\n  }\n\n}\n\n_defineProperty(MultiBackendImpl, \"isSetUp\", false);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}