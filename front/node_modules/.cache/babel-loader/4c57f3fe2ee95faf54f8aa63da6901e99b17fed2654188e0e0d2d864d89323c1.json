{"ast":null,"code":"var _jsxFileName = \"/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/components/ide/ideUI/sideBar/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { ThemeProvider, CssBaseline } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { Tree, MultiBackend, getDescendants, getBackendOptions } from \"@minoru/react-dnd-treeview\";\nimport { CustomNode } from \"./customNode/CustomNode\";\nimport { CustomDragPreview } from \"./customDragPreview/CustomDragPreview\";\nimport { AddDialog } from \"./addDialog/AddDialog\";\nimport { theme } from \"./theme\";\nimport styles from \"./Sidebar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFile, addFolder, deleteFileOrFolder, selectFile, setCurrentEditingFile, setTreeData } from \"../../fileSlice/FileSlice\";\nimport { deleteFolderAPI } from \"../../../../api/ideAPI/deleteFolderAPI\";\nimport { useMutation } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar() {\n  _s();\n  const filesAndFolders = useSelector(state => state.file.data);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    forceUpdate({});\n  }, [filesAndFolders]);\n  const handleFileClick = node => {\n    // 클릭한 파일의 ID와 내용\n    const clickedFileId = node.id;\n    const clickedFileContent = node.content || \"\"; // 예: 초기 파일 내용 설정\n\n    // 편집 중인 파일 정보를 업데이트\n    dispatch(setCurrentEditingFile({\n      id: clickedFileId,\n      content: clickedFileContent\n    }));\n\n    // 선택된 파일의 ID를 설정 (새로 추가된 부분)\n    dispatch(selectFile(clickedFileId));\n  };\n  const handleDrop = newTree => {\n    dispatch(setTreeData(newTree));\n  };\n  const deleteFolderMutation = useMutation(deleteFolderAPI, {\n    onSuccess: (data, folderId) => {\n      dispatch(deleteFileOrFolder(folderId));\n    },\n    // 에러가 발생한 경우의 처리\n    onError: error => {\n      console.error(\"폴더 삭제 실패\", error.message);\n    }\n  });\n  const handleDelete = folderId => {\n    deleteFolderMutation.mutate(folderId);\n  };\n  const handleCopy = id => {\n    // Handle node copy logic\n    // TODO\n  };\n  const handleOpenDialog = () => {\n    // Handle open dialog logic\n    // TODO\n  };\n  const handleCloseDialog = () => {\n    // Handle close dialog logic\n    // TODO\n  };\n  const handleSubmit = newNode => {\n    // newNode의 type에 따라 addFile 또는 addFolder 액션을 dispatch\n    if (newNode.type === \"file\") {\n      dispatch(addFile(newNode));\n    } else {\n      dispatch(addFolder(newNode));\n    }\n  };\n  console.log(\"filesAndFolders\", filesAndFolders);\n  // const [treeData, setTreeData] = useState(filesAndFolders);\n  // const handleDrop = (newTree) => setTreeData(newTree);\n\n  // const handleDelete = (id) => {\n  //   const deleteIds = [\n  //     id,\n  //     ...getDescendants(treeData, id).map((node) => node.id),\n  //   ];\n  //   const newTree = treeData.filter((node) => !deleteIds.includes(node.id));\n\n  //   setTreeData(newTree);\n  // };\n\n  // const handleCopy = (id) => {\n  //   const lastId = getLastId(treeData);\n  //   const targetNode = treeData.find((n) => n.id === id);\n  //   const descendants = getDescendants(treeData, id);\n  //   const partialTree = descendants.map((node) => ({\n  //     ...node,\n  //     id: node.id + lastId,\n  //     parent: node.parent + lastId,\n  //   }));\n\n  //   setTreeData([\n  //     ...treeData,\n  //     {\n  //       ...targetNode,\n  //       id: targetNode.id + lastId,\n  //     },\n  //     ...partialTree,\n  //   ]);\n  // };\n\n  // const handleOpenDialog = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleCloseDialog = () => {\n  //   setOpen(false);\n  // };\n\n  // const handleSubmit = (newNode) => {\n  //   const lastId = getLastId(treeData) + 1;\n\n  //   setTreeData([\n  //     ...treeData,\n  //     {\n  //       ...newNode,\n  //       id: lastId,\n  //     },\n  //   ]);\n\n  //   setOpen(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: MultiBackend,\n      options: getBackendOptions(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.app,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: open && /*#__PURE__*/_jsxDEV(AddDialog, {\n            tree: filesAndFolders,\n            onClose: handleCloseDialog,\n            onSubmit: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tree, {\n          tree: filesAndFolders,\n          rootId: 0,\n          render: (node, options) => /*#__PURE__*/_jsxDEV(CustomNode, {\n            node: node,\n            ...options,\n            onDelete: handleDelete,\n            onCopy: handleCopy,\n            onClick: () => handleFileClick(node)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this),\n          dragPreviewRender: monitorProps => /*#__PURE__*/_jsxDEV(CustomDragPreview, {\n            monitorProps: monitorProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this),\n          onDrop: handleDrop,\n          classes: {\n            root: styles.treeRoot,\n            draggingSource: styles.draggingSource,\n            dropTarget: styles.dropTarget\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"lIVuu9I1ZbKtNqOylrj0hUv5rdA=\", false, function () {\n  return [useSelector, useDispatch, useMutation];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useState","DndProvider","ThemeProvider","CssBaseline","Button","AddIcon","Tree","MultiBackend","getDescendants","getBackendOptions","CustomNode","CustomDragPreview","AddDialog","theme","styles","useDispatch","useSelector","addFile","addFolder","deleteFileOrFolder","selectFile","setCurrentEditingFile","setTreeData","deleteFolderAPI","useMutation","jsxDEV","_jsxDEV","Sidebar","_s","filesAndFolders","state","file","data","dispatch","open","setOpen","forceUpdate","handleFileClick","node","clickedFileId","id","clickedFileContent","content","handleDrop","newTree","deleteFolderMutation","onSuccess","folderId","onError","error","console","message","handleDelete","mutate","handleCopy","handleOpenDialog","handleCloseDialog","handleSubmit","newNode","type","log","children","fileName","_jsxFileName","lineNumber","columnNumber","backend","options","className","app","tree","onClose","onSubmit","rootId","render","onDelete","onCopy","onClick","dragPreviewRender","monitorProps","onDrop","classes","root","treeRoot","draggingSource","dropTarget","_c","$RefreshReg$"],"sources":["/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/components/ide/ideUI/sideBar/Sidebar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { ThemeProvider, CssBaseline } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  Tree,\n  MultiBackend,\n  getDescendants,\n  getBackendOptions,\n} from \"@minoru/react-dnd-treeview\";\nimport { CustomNode } from \"./customNode/CustomNode\";\nimport { CustomDragPreview } from \"./customDragPreview/CustomDragPreview\";\nimport { AddDialog } from \"./addDialog/AddDialog\";\nimport { theme } from \"./theme\";\nimport styles from \"./Sidebar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addFile,\n  addFolder,\n  deleteFileOrFolder,\n  selectFile,\n  setCurrentEditingFile,\n  setTreeData,\n} from \"../../fileSlice/FileSlice\";\nimport { deleteFolderAPI } from \"../../../../api/ideAPI/deleteFolderAPI\";\nimport { useMutation } from \"react-query\";\n\nfunction Sidebar() {\n  const filesAndFolders = useSelector((state) => state.file.data);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [, forceUpdate] = useState();\n\n  useEffect(() => {\n    forceUpdate({});\n  }, [filesAndFolders]);\n  const handleFileClick = (node) => {\n    // 클릭한 파일의 ID와 내용\n    const clickedFileId = node.id;\n    const clickedFileContent = node.content || \"\"; // 예: 초기 파일 내용 설정\n\n    // 편집 중인 파일 정보를 업데이트\n    dispatch(\n      setCurrentEditingFile({ id: clickedFileId, content: clickedFileContent }),\n    );\n\n    // 선택된 파일의 ID를 설정 (새로 추가된 부분)\n    dispatch(selectFile(clickedFileId));\n  };\n\n  const handleDrop = (newTree) => {\n    dispatch(setTreeData(newTree));\n  };\n\n  const deleteFolderMutation = useMutation(deleteFolderAPI, {\n    onSuccess: (data, folderId) => {\n      dispatch(deleteFileOrFolder(folderId));\n    },\n\n    // 에러가 발생한 경우의 처리\n    onError: (error) => {\n      console.error(\"폴더 삭제 실패\", error.message);\n    },\n  });\n\n  const handleDelete = (folderId) => {\n    deleteFolderMutation.mutate(folderId);\n  };\n\n  const handleCopy = (id) => {\n    // Handle node copy logic\n    // TODO\n  };\n\n  const handleOpenDialog = () => {\n    // Handle open dialog logic\n    // TODO\n  };\n\n  const handleCloseDialog = () => {\n    // Handle close dialog logic\n    // TODO\n  };\n\n  const handleSubmit = (newNode) => {\n    // newNode의 type에 따라 addFile 또는 addFolder 액션을 dispatch\n    if (newNode.type === \"file\") {\n      dispatch(addFile(newNode));\n    } else {\n      dispatch(addFolder(newNode));\n    }\n  };\n\n  console.log(\"filesAndFolders\", filesAndFolders);\n  // const [treeData, setTreeData] = useState(filesAndFolders);\n  // const handleDrop = (newTree) => setTreeData(newTree);\n\n  // const handleDelete = (id) => {\n  //   const deleteIds = [\n  //     id,\n  //     ...getDescendants(treeData, id).map((node) => node.id),\n  //   ];\n  //   const newTree = treeData.filter((node) => !deleteIds.includes(node.id));\n\n  //   setTreeData(newTree);\n  // };\n\n  // const handleCopy = (id) => {\n  //   const lastId = getLastId(treeData);\n  //   const targetNode = treeData.find((n) => n.id === id);\n  //   const descendants = getDescendants(treeData, id);\n  //   const partialTree = descendants.map((node) => ({\n  //     ...node,\n  //     id: node.id + lastId,\n  //     parent: node.parent + lastId,\n  //   }));\n\n  //   setTreeData([\n  //     ...treeData,\n  //     {\n  //       ...targetNode,\n  //       id: targetNode.id + lastId,\n  //     },\n  //     ...partialTree,\n  //   ]);\n  // };\n\n  // const handleOpenDialog = () => {\n  //   setOpen(true);\n  // };\n\n  // const handleCloseDialog = () => {\n  //   setOpen(false);\n  // };\n\n  // const handleSubmit = (newNode) => {\n  //   const lastId = getLastId(treeData) + 1;\n\n  //   setTreeData([\n  //     ...treeData,\n  //     {\n  //       ...newNode,\n  //       id: lastId,\n  //     },\n  //   ]);\n\n  //   setOpen(false);\n  // };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <DndProvider backend={MultiBackend} options={getBackendOptions()}>\n        <div className={styles.app}>\n          <div>\n            {open && (\n              <AddDialog\n                tree={filesAndFolders}\n                onClose={handleCloseDialog}\n                onSubmit={handleSubmit}\n              />\n            )}\n          </div>\n          <Tree\n            tree={filesAndFolders}\n            rootId={0}\n            render={(node, options) => (\n              <CustomNode\n                node={node}\n                {...options}\n                onDelete={handleDelete}\n                onCopy={handleCopy}\n                onClick={() => handleFileClick(node)}\n              />\n            )}\n            dragPreviewRender={(monitorProps) => (\n              <CustomDragPreview monitorProps={monitorProps} />\n            )}\n            onDrop={handleDrop}\n            classes={{\n              root: styles.treeRoot,\n              draggingSource: styles.draggingSource,\n              dropTarget: styles.dropTarget,\n            }}\n          />\n        </div>\n      </DndProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default Sidebar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}