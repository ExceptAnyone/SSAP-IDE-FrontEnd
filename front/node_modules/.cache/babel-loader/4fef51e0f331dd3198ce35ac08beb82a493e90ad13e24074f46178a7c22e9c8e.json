{"ast":null,"code":"// FileSlice.jsx\nimport { createSlice, current } from \"@reduxjs/toolkit\";\nexport const fileSlice = createSlice({\n  name: \"file\",\n  initialState: {\n    data: [],\n    selectFileId: null,\n    editingFileId: null,\n    // 현재 편집 중인 파일 id\n    editingFileContent: \"\" //현재 편집 중인 파일의 내용\n  },\n\n  reducers: {\n    setTreeData: (state, action) => {\n      state.data = action.payload;\n    },\n    addFile: (state, action) => {\n      const newItem = {\n        ...action.payload,\n        type: \"file\"\n      };\n      state.data.push(newItem);\n    },\n    addFolder: (state, action) => {\n      const newItem = {\n        ...action.payload,\n        type: \"folder\",\n        droppable: true\n      };\n      state.data.push(newItem);\n    },\n    deleteFileOrFolder: (state, action) => {\n      const id = action.payload;\n      state.data = state.data.filter(item => item.id !== id);\n    },\n    selectFile: (state, action) => {\n      state.selectFileId = action.payload;\n    },\n    setCurrentEditingFile: (state, action) => {\n      console.log(\"setCurrentEditingFile action called with:\", action.payload); //TODO 추후 삭제\n      state.editingFileId = action.payload.id;\n      state.editingFileContent = action.payload.content;\n    },\n    updateFileContent: (state, action) => {\n      console.log(\"updateFileContent action.payload:\", action.payload); //TODO 추후 삭제\n      const {\n        id,\n        content\n      } = action.payload;\n      const targetFile = state.data.find(file => file.id === id);\n      console.log(\"Found target file :\", targetFile); //TODO 추후 삭제\n\n      if (targetFile) {\n        console.log(\"파일 업데이트\", content); //TODO 추후 삭제\n        targetFile.content = content;\n      }\n    },\n    updateFileName: (state, action) => {\n      //폴더/파일 이름 수정\n      const {\n        id,\n        newName\n      } = action.payload;\n      const fileOrFolder = state.data.find(item => item.id === id);\n      if (fileOrFolder) {\n        fileOrFolder.text = newName;\n      }\n    }\n  }\n});\nexport const {\n  setTreeData,\n  addFile,\n  addFolder,\n  deleteFileOrFolder,\n  selectFile,\n  setCurrentEditingFile,\n  updateFileContent,\n  updateFileName\n} = fileSlice.actions;\nexport default fileSlice.reducer;","map":{"version":3,"names":["createSlice","current","fileSlice","name","initialState","data","selectFileId","editingFileId","editingFileContent","reducers","setTreeData","state","action","payload","addFile","newItem","type","push","addFolder","droppable","deleteFileOrFolder","id","filter","item","selectFile","setCurrentEditingFile","console","log","content","updateFileContent","targetFile","find","file","updateFileName","newName","fileOrFolder","text","actions","reducer"],"sources":["/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/components/ide/fileSlice/FileSlice.jsx"],"sourcesContent":["// FileSlice.jsx\nimport { createSlice, current } from \"@reduxjs/toolkit\";\n\nexport const fileSlice = createSlice({\n  name: \"file\",\n  initialState: {\n    data: [],\n    selectFileId: null,\n    editingFileId: null, // 현재 편집 중인 파일 id\n    editingFileContent: \"\", //현재 편집 중인 파일의 내용\n  },\n  reducers: {\n    setTreeData: (state, action) => {\n      state.data = action.payload;\n    },\n    addFile: (state, action) => {\n      const newItem = {\n        ...action.payload,\n        type: \"file\",\n      };\n      state.data.push(newItem);\n    },\n    addFolder: (state, action) => {\n      const newItem = {\n        ...action.payload,\n        type: \"folder\",\n        droppable: true,\n      };\n      state.data.push(newItem);\n    },\n    deleteFileOrFolder: (state, action) => {\n      const id = action.payload;\n      state.data = state.data.filter((item) => item.id !== id);\n    },\n    selectFile: (state, action) => {\n      state.selectFileId = action.payload;\n    },\n    setCurrentEditingFile: (state, action) => {\n      console.log(\"setCurrentEditingFile action called with:\", action.payload); //TODO 추후 삭제\n      state.editingFileId = action.payload.id;\n      state.editingFileContent = action.payload.content;\n    },\n    updateFileContent: (state, action) => {\n      console.log(\"updateFileContent action.payload:\", action.payload); //TODO 추후 삭제\n      const { id, content } = action.payload;\n      const targetFile = state.data.find((file) => file.id === id);\n      console.log(\"Found target file :\", targetFile); //TODO 추후 삭제\n\n      if (targetFile) {\n        console.log(\"파일 업데이트\", content); //TODO 추후 삭제\n        targetFile.content = content;\n      }\n    },\n    updateFileName: (state, action) => {\n      //폴더/파일 이름 수정\n      const { id, newName } = action.payload;\n      const fileOrFolder = state.data.find((item) => item.id === id);\n      if (fileOrFolder) {\n        fileOrFolder.text = newName;\n      }\n    },\n  },\n});\n\nexport const {\n  setTreeData,\n  addFile,\n  addFolder,\n  deleteFileOrFolder,\n  selectFile,\n  setCurrentEditingFile,\n  updateFileContent,\n  updateFileName,\n} = fileSlice.actions;\n\nexport default fileSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}