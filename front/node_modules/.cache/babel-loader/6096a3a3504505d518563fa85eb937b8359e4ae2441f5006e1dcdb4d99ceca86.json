{"ast":null,"code":"var _jsxFileName = \"/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/components/chat/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { API_ENDPOINT, getMessages, sendMessage } from \"../../api/chatAPI\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { BiSearch, BiSolidUser } from \"react-icons/bi\";\nimport { BsChatSquareDots } from \"react-icons/bs\";\nimport \"./chat.scss\";\nimport ChatUserList from \"./chatUserList/ChatUserList\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { useSelector } from \"react-redux\";\n\n// TODO 컨테이너 고유ID를 roomID로 적용시켜야함\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roomId = \"aa0cea7dcd81cbea0fe690aa72b8520b6dfce49e35e418c0a0c32f88f24a105\";\n// const user = { email: \"mater@gmail.com\", name: \"master\" };\n// const name = user.name;\n// const email = user.email;\n// ssap@naver.com ssap1234!\n\nconst Chat = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState(name);\n  const [userEmail, setUserEmail] = useState(email);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const socketRef = useRef();\n  const [isVisible, setIsVisible] = useState(false);\n  const [newMessageArrived, setNewMessageArrived] = useState(false);\n  const [showUserList, setShowUserList] = useState(false);\n  const storedUser = JSON.parse(localStorage.getItem('user'));\n  console.log(userName, userEmail);\n  const queryClient = useQueryClient();\n  const {\n    data: chatData,\n    isLoading,\n    isError\n  } = useQuery([\"getMessages\", roomId],\n  // 쿼리 키\n  () => getMessages(roomId),\n  // 데이터를 가져오는 함수\n  {\n    enabled: !!roomId,\n    // roomId가 존재할 때만 활성화\n    onSuccess: data => {\n      setMessages(data);\n    },\n    retry: 3,\n    // 실패 시 최대 3번 재시도\n    retryDelay: attempt => Math.min(attempt * 1000, 3000) // 재시도 사이의 지연 시간 설정\n  });\n  // console.log(\"getMessages\", chatData);\n\n  //TODO\n  const sendMessageMutation = useMutation(sendMessage, {\n    onSuccess: data => {\n      // 메시지 전송에 성공하면 데이터를 재요청\n      queryClient.invalidateQueries([\"getMessages\", roomId]);\n      console.log(\"메세지 저장 성공:\", data);\n    },\n    onError: error => {\n      console.error(\"메세지 저장 실패:\", error);\n    }\n  });\n\n  // 소켓\n  useEffect(() => {\n    if (!userEmail) return;\n\n    // Socket.IO 클라이언트 초기화\n    const socket = socketIOClient(API_ENDPOINT, {\n      //cors 체크\n      withCredentials: true\n    });\n    socket.emit(\"setUserInfo\", {\n      email: email,\n      name: name\n    });\n    console.log(\"setUserInfo: \", email, name);\n    socket.emit(\"joinRoom\", roomId, email);\n\n    // 서버로부터 메시지를 받으면 상태 업데이트\n    const onReceiveMessage = data => {\n      const {\n        name,\n        message\n      } = data;\n      setMessages(prevMessages => [...prevMessages, {\n        name,\n        message\n      }]);\n\n      // 본인 확인\n      const isOwner = data.email === userEmail;\n      console.log(\"data.email:\", data.email, \"userEmail\", userEmail);\n      console.log(\"isOwner:\", isOwner, \"isVisible:\", isVisible);\n\n      // 새로운 메세지 도착하면 알림\n      if (!isOwner && !isVisibleRef.current) {\n        setNewMessageArrived(true);\n        queryClient.invalidateQueries(\"getMessages\"); // 새로운 메세지 도착시 채팅 내용 가져오기\n      }\n    };\n\n    socket.on(\"receiveMessage\", data => {\n      onReceiveMessage(data);\n      queryClient.invalidateQueries(\"getMessages\");\n    }); // TODO: 수정됨\n\n    socketRef.current = socket;\n\n    // 소켓 연결 종료\n    return () => {\n      socket.off(\"receiveMessage\", onReceiveMessage);\n      socketRef.current.disconnect();\n    };\n  }, [roomId, email, name]);\n\n  // 메세지 엡뎃 확인용\n  useEffect(() => {\n    console.log(\"Updated messages:\", messages, \"UpdatednewMessageArrived:\", newMessageArrived);\n  }, [messages, newMessageArrived]);\n\n  // 채팅창 열기\n  const handleToggleChat = () => {\n    setNewMessageArrived(false);\n    setIsVisible(prevIsVisible => !prevIsVisible); // isVisible 상태 토글\n  };\n\n  // 채팅 메세지 전송\n  const handleSendMessage = async e => {\n    if (e) e.preventDefault();\n    if (message.trim() === \"\") return;\n    const data = {\n      email,\n      name,\n      message\n    };\n    console.log(\"handleSendMessage: \", data);\n    try {\n      const result = await sendMessageMutation.mutateAsync(data);\n      if (result.success) {\n        setMessage(\"\");\n      }\n    } catch (error) {\n      console.error(\"메세지 전송 오류:\", error);\n    }\n  };\n\n  // textarea 엔터 키 전송\n  const handleTextareaKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // 채팅창 열림 여부 최신 상태 업뎃 유지\n  const isVisibleRef = useRef(isVisible);\n  useEffect(() => {\n    isVisibleRef.current = isVisible;\n    console.log(\"isVisible:\", isVisible); // isVisible 상태 확인용\n  }, [isVisible]);\n\n  // 접속자 창 toggle\n  const toggleUserList = () => {\n    setShowUserList(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_container\",\n    children: [isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uCC44\\uD305\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top_right\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(BiSearch, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: toggleUserList,\n              children: /*#__PURE__*/_jsxDEV(BiSolidUser, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-wrap\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.email === userEmail ? \"msg_right\" : \"msg_left\"}`,\n            children: [msg.email === userEmail ? \"\" : /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: message,\n              autoFocus: true,\n              onChange: e => setMessage(e.target.value),\n              onKeyPress: handleTextareaKeyPress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"\\uC804\\uC1A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), showUserList && /*#__PURE__*/_jsxDEV(ChatUserList, {\n        userName: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chat-button ${isVisible ? \"close\" : \"open\"} ${newMessageArrived && \"bounce-animation\"}`,\n      onClick: handleToggleChat,\n      children: [isVisible ? /*#__PURE__*/_jsxDEV(IoIosCloseCircleOutline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(BsChatSquareDots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 52\n      }, this), newMessageArrived && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification\",\n        children: \"!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"J5zQ8npYlkSSOUFW8XXMjFXNm9w=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socketIOClient","API_ENDPOINT","getMessages","sendMessage","IoIosCloseCircleOutline","BiSearch","BiSolidUser","BsChatSquareDots","ChatUserList","useMutation","useQuery","useQueryClient","useSelector","jsxDEV","_jsxDEV","roomId","Chat","_s","users","setUsers","userName","setUserName","name","userEmail","setUserEmail","email","messages","setMessages","message","setMessage","socketRef","isVisible","setIsVisible","newMessageArrived","setNewMessageArrived","showUserList","setShowUserList","storedUser","JSON","parse","localStorage","getItem","console","log","queryClient","data","chatData","isLoading","isError","enabled","onSuccess","retry","retryDelay","attempt","Math","min","sendMessageMutation","invalidateQueries","onError","error","socket","withCredentials","emit","onReceiveMessage","prevMessages","isOwner","isVisibleRef","current","on","off","disconnect","handleToggleChat","prevIsVisible","handleSendMessage","e","preventDefault","trim","result","mutateAsync","success","handleTextareaKeyPress","key","shiftKey","toggleUserList","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","onSubmit","value","autoFocus","onChange","target","onKeyPress","type","_c","$RefreshReg$"],"sources":["/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/components/chat/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { API_ENDPOINT, getMessages, sendMessage } from \"../../api/chatAPI\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { BiSearch, BiSolidUser } from \"react-icons/bi\";\nimport { BsChatSquareDots } from \"react-icons/bs\";\nimport \"./chat.scss\";\nimport ChatUserList from \"./chatUserList/ChatUserList\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { useSelector } from \"react-redux\";\n\n// TODO 컨테이너 고유ID를 roomID로 적용시켜야함\nconst roomId =\n  \"aa0cea7dcd81cbea0fe690aa72b8520b6dfce49e35e418c0a0c32f88f24a105\";\n// const user = { email: \"mater@gmail.com\", name: \"master\" };\n// const name = user.name;\n// const email = user.email;\n// ssap@naver.com ssap1234!\n\nconst Chat = () => {\n  const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState(name);\n  const [userEmail, setUserEmail] = useState(email);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const socketRef = useRef();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [newMessageArrived, setNewMessageArrived] = useState(false);\n  const [showUserList, setShowUserList] = useState(false);\n\n  const storedUser = JSON.parse(localStorage.getItem('user'));\n  console.log(userName, userEmail);\n\n  const queryClient = useQueryClient();\n  const {\n    data: chatData,\n    isLoading,\n    isError,\n  } = useQuery(\n    [\"getMessages\", roomId], // 쿼리 키\n    () => getMessages(roomId), // 데이터를 가져오는 함수\n    {\n      enabled: !!roomId, // roomId가 존재할 때만 활성화\n      onSuccess: (data) => {\n        setMessages(data);\n      },\n      retry: 3, // 실패 시 최대 3번 재시도\n      retryDelay: (attempt) => Math.min(attempt * 1000, 3000), // 재시도 사이의 지연 시간 설정\n    },\n  );\n  // console.log(\"getMessages\", chatData);\n\n  //TODO\n  const sendMessageMutation = useMutation(sendMessage, {\n    onSuccess: (data) => {\n      // 메시지 전송에 성공하면 데이터를 재요청\n      queryClient.invalidateQueries([\"getMessages\", roomId]);\n      console.log(\"메세지 저장 성공:\", data);\n    },\n    onError: (error) => {\n      console.error(\"메세지 저장 실패:\", error);\n    },\n  });\n\n  // 소켓\n  useEffect(() => {\n    if (!userEmail) return;\n\n    // Socket.IO 클라이언트 초기화\n    const socket = socketIOClient(API_ENDPOINT, {\n      //cors 체크\n      withCredentials: true,\n    });\n\n    socket.emit(\"setUserInfo\", {\n      email: email,\n      name: name,\n    });\n    console.log(\"setUserInfo: \", email, name);\n\n    socket.emit(\"joinRoom\", roomId, email);\n\n    // 서버로부터 메시지를 받으면 상태 업데이트\n    const onReceiveMessage = (data) => {\n      const { name, message } = data;\n      setMessages((prevMessages) => [...prevMessages, { name, message }]);\n\n      // 본인 확인\n      const isOwner = data.email === userEmail;\n      console.log(\"data.email:\", data.email, \"userEmail\", userEmail);\n      console.log(\"isOwner:\", isOwner, \"isVisible:\", isVisible);\n\n      // 새로운 메세지 도착하면 알림\n      if (!isOwner && !isVisibleRef.current) {\n        setNewMessageArrived(true);\n        queryClient.invalidateQueries(\"getMessages\"); // 새로운 메세지 도착시 채팅 내용 가져오기\n      }\n    };\n\n    socket.on(\"receiveMessage\", (data) => {\n      onReceiveMessage(data);\n      queryClient.invalidateQueries(\"getMessages\");\n    }); // TODO: 수정됨\n\n    socketRef.current = socket;\n\n    // 소켓 연결 종료\n    return () => {\n      socket.off(\"receiveMessage\", onReceiveMessage);\n      socketRef.current.disconnect();\n    };\n  }, [roomId, email, name]);\n\n  // 메세지 엡뎃 확인용\n  useEffect(() => {\n    console.log(\n      \"Updated messages:\",\n      messages,\n      \"UpdatednewMessageArrived:\",\n      newMessageArrived,\n    );\n  }, [messages, newMessageArrived]);\n\n  // 채팅창 열기\n  const handleToggleChat = () => {\n    setNewMessageArrived(false);\n    setIsVisible((prevIsVisible) => !prevIsVisible); // isVisible 상태 토글\n  };\n\n  // 채팅 메세지 전송\n  const handleSendMessage = async (e) => {\n    if (e) e.preventDefault();\n    if (message.trim() === \"\") return;\n\n    const data = { email, name, message };\n    console.log(\"handleSendMessage: \", data);\n\n    try {\n      const result = await sendMessageMutation.mutateAsync(data);\n      if (result.success) {\n        setMessage(\"\");\n      }\n    } catch (error) {\n      console.error(\"메세지 전송 오류:\", error);\n    }\n  };\n\n  // textarea 엔터 키 전송\n  const handleTextareaKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // 채팅창 열림 여부 최신 상태 업뎃 유지\n  const isVisibleRef = useRef(isVisible);\n  useEffect(() => {\n    isVisibleRef.current = isVisible;\n    console.log(\"isVisible:\", isVisible); // isVisible 상태 확인용\n  }, [isVisible]);\n\n  // 접속자 창 toggle\n  const toggleUserList = () => {\n    setShowUserList((prev) => !prev);\n  };\n\n  return (\n    <div className=\"chat_container\">\n      {isVisible && (\n        <div className=\"chat-inner\">\n          <div className=\"chat-content\">\n            <div className=\"chat-top\">\n              <h4>채팅</h4>\n              <div className=\"top_right\">\n                <span>\n                  <BiSearch />\n                </span>\n                <span onClick={toggleUserList}>\n                  <BiSolidUser />\n                </span>\n              </div>\n            </div>\n            <div className=\"msg-wrap\">\n              {messages.map((msg, index) => (\n                <div\n                  key={index}\n                  className={`message ${\n                    msg.email === userEmail ? \"msg_right\" : \"msg_left\"\n                  }`}\n                >\n                  {msg.email === userEmail ? \"\" : <strong>{msg.name}</strong>}\n\n                  <span>{msg.message}</span>\n                </div>\n              ))}\n            </div>\n            <div className=\"msg-form\">\n              <form onSubmit={handleSendMessage}>\n                <textarea\n                  value={message}\n                  autoFocus={true}\n                  onChange={(e) => setMessage(e.target.value)}\n                  onKeyPress={handleTextareaKeyPress}\n                ></textarea>\n                <button type=\"submit\">전송</button>\n              </form>\n            </div>\n          </div>\n          {showUserList && <ChatUserList userName={userName} />}\n        </div>\n      )}\n      {/* TODO: 알림 애니메이션 수정 필요 */}\n      <button\n        className={`chat-button ${isVisible ? \"close\" : \"open\"} ${\n          newMessageArrived && \"bounce-animation\"\n        }`}\n        onClick={handleToggleChat}\n      >\n        {isVisible ? <IoIosCloseCircleOutline /> : <BsChatSquareDots />}\n        {newMessageArrived && <span className=\"notification\">!</span>}\n      </button>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}