{"ast":null,"code":"//폴더 생성시 api 호출 함수\nimport axios from \"axios\";\nexport const createFolderAPI = async ({\n  containerId,\n  parentFolderId,\n  name,\n  type,\n  path\n}) => {\n  const API_URL = `http://ide-env.eba-mhhgujuf.ap-northeast-2.elasticbeanstalk.com/ide/9271b06b-34f3-49ef-b311-776d3bbc2df3/folders`;\n  try {\n    const response = await axios.post(API_URL, {\n      parentFolderId,\n      name,\n      type,\n      path\n    });\n    if (response.status === 201) {\n      return response.data;\n    } else {\n      throw new Error(response.data.message);\n    }\n  } catch (error) {\n    if (error.response) {\n      switch (error.response.status) {\n        case 400:\n          throw new Error(\"파라미터 필수 항목이 누락되었거나 형식이 잘못되었습니다.\");\n        case 403:\n          throw new Error(\"해당 경로에 폴더를 생성할 권한이 없습니다.\");\n        case 404:\n          throw new Error(\"지정된 containerId에 해당하는 컨테이너가 존재하지 않습니다.\");\n        case 409:\n          throw new Error(\"동일한 이름의 폴더가 이미 해당 경로에 존재합니다.\");\n        case 500:\n        default:\n          throw new Error(\"요청을 처리하는 중에 서버에서 오류가 발생했습니다.\");\n      }\n    } else {\n      throw error; // axios 외부의 오류 처리 (예: 네트워크 오류)\n    }\n  }\n};","map":{"version":3,"names":["axios","createFolderAPI","containerId","parentFolderId","name","type","path","API_URL","response","post","status","data","Error","message","error"],"sources":["/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/api/ideAPI/createFolderAPI.jsx"],"sourcesContent":["//폴더 생성시 api 호출 함수\nimport axios from \"axios\";\n\nexport const createFolderAPI = async ({\n  containerId,\n  parentFolderId,\n  name,\n  type,\n  path,\n}) => {\n  const API_URL = `http://ide-env.eba-mhhgujuf.ap-northeast-2.elasticbeanstalk.com/ide/9271b06b-34f3-49ef-b311-776d3bbc2df3/folders`;\n\n  try {\n    const response = await axios.post(API_URL, {\n      parentFolderId,\n      name,\n      type,\n      path,\n    });\n\n    if (response.status === 201) {\n      return response.data;\n    } else {\n      throw new Error(response.data.message);\n    }\n  } catch (error) {\n    if (error.response) {\n      switch (error.response.status) {\n        case 400:\n          throw new Error(\n            \"파라미터 필수 항목이 누락되었거나 형식이 잘못되었습니다.\",\n          );\n        case 403:\n          throw new Error(\"해당 경로에 폴더를 생성할 권한이 없습니다.\");\n        case 404:\n          throw new Error(\n            \"지정된 containerId에 해당하는 컨테이너가 존재하지 않습니다.\",\n          );\n        case 409:\n          throw new Error(\"동일한 이름의 폴더가 이미 해당 경로에 존재합니다.\");\n        case 500:\n        default:\n          throw new Error(\"요청을 처리하는 중에 서버에서 오류가 발생했습니다.\");\n      }\n    } else {\n      throw error; // axios 외부의 오류 처리 (예: 네트워크 오류)\n    }\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAO;EACpCC,WAAW;EACXC,cAAc;EACdC,IAAI;EACJC,IAAI;EACJC;AACF,CAAC,KAAK;EACJ,MAAMC,OAAO,GAAI,kHAAiH;EAElI,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAACF,OAAO,EAAE;MACzCJ,cAAc;MACdC,IAAI;MACJC,IAAI;MACJC;IACF,CAAC,CAAC;IAEF,IAAIE,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOF,QAAQ,CAACG,IAAI;IACtB,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACE,OAAO,CAAC;IACxC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACN,QAAQ,EAAE;MAClB,QAAQM,KAAK,CAACN,QAAQ,CAACE,MAAM;QAC3B,KAAK,GAAG;UACN,MAAM,IAAIE,KAAK,CACb,iCACF,CAAC;QACH,KAAK,GAAG;UACN,MAAM,IAAIA,KAAK,CAAC,0BAA0B,CAAC;QAC7C,KAAK,GAAG;UACN,MAAM,IAAIA,KAAK,CACb,wCACF,CAAC;QACH,KAAK,GAAG;UACN,MAAM,IAAIA,KAAK,CAAC,8BAA8B,CAAC;QACjD,KAAK,GAAG;QACR;UACE,MAAM,IAAIA,KAAK,CAAC,8BAA8B,CAAC;MACnD;IACF,CAAC,MAAM;MACL,MAAME,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}