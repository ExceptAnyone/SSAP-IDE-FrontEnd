{"ast":null,"code":"import _toConsumableArray from\"/Users/seongsuk/SSAP-IDE-FrontEnd/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/seongsuk/SSAP-IDE-FrontEnd/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import Test from\"./Test\";import Header from\"../../components/header/Header\";import{AiOutlineSearch}from\"react-icons/ai\";import\"./MainPage.css\";import Footer from\"../../components/footer/Footer\";import Name from\"../../components/form/Name\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function MainPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),originalPosts=_useState2[0],setOriginalPosts=_useState2[1];// 초기 글 목록을 저장하는 상태 변수\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];// 글 목록을 상태로 관리\nvar addPost=function addPost(post){var updatedPosts=[].concat(_toConsumableArray(posts),[post]);setPosts(updatedPosts);// 로컬 스토리지에 데이터 저장\nlocalStorage.setItem(\"posts\",JSON.stringify(updatedPosts));};useEffect(function(){// 페이지가 로드될 때 로컬 스토리지에서 데이터를 읽어옴\nvar storedPosts=JSON.parse(localStorage.getItem(\"posts\"))||[];setPosts(storedPosts);},[]);var deletePost=function deletePost(index){// 해당 인덱스의 글을 삭제\nvar updatedPosts=_toConsumableArray(posts);updatedPosts.splice(index,1);setPosts(updatedPosts);// 로컬 스토리지에 데이터 저장\nlocalStorage.setItem(\"posts\",JSON.stringify(updatedPosts));};var editPost=function editPost(index,updatedPost){// 해당 인덱스의 글을 수정\nvar updatedPosts=_toConsumableArray(posts);updatedPosts[index]=updatedPost;setPosts(updatedPosts);// 로컬 스토리지에 데이터 저장\nlocalStorage.setItem(\"posts\",JSON.stringify(updatedPosts));};var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),searchTerm=_useState6[0],setSearchTerm=_useState6[1];var handleSearch=function handleSearch(e){var searchText=e.target.value.toLowerCase();// 검색어를 소문자로 통일\nsetSearchTerm(searchText);if(searchText===\"\"){// 검색어가 비어있을 때, 초기 글 목록을 보여줍니다.\nsetPosts(originalPosts);}else{// 검색어에 해당하는 게시물만 필터링하여 업데이트합니다.\nvar filteredPosts=originalPosts.filter(function(post){return post.title.toLowerCase().includes(searchText);}// 게시물의 title도 소문자로 통일하여 비교\n);setPosts(filteredPosts);}};useEffect(function(){// 페이지가 로드될 때 로컬 스토리지에서 데이터를 읽어와 originalPosts 상태에 설정합니다.\nvar storedPosts=JSON.parse(localStorage.getItem(\"posts\"))||[];setPosts(storedPosts);setOriginalPosts(storedPosts);// 초기 글 목록을 설정합니다.\n},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"main\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-inner\",children:[/*#__PURE__*/_jsx(Header,{icon:\"\\uBAA8\\uB4E0 \\uCEE8\\uD14C\\uC774\\uB108\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-middle\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-hd\",children:[/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(AiOutlineSearch,{})}),/*#__PURE__*/_jsx(\"input\",{className:\"search\",type:\"text\",placeholder:\"\\uCEE8\\uD14C\\uC774\\uB108 \\uC774\\uB984\",onChange:handleSearch})]}),/*#__PURE__*/_jsx(Name,{link:\"/containers\",name:\"\\uC0C8 \\uCEE8\\uD14C\\uC774\\uB108\",MainPage:MainPage,addPost:addPost})]}),/*#__PURE__*/_jsx(\"div\",{className:\"test-list\",children:posts.map(function(post,index){return/*#__PURE__*/_jsx(Test,{posts:[post],deletePost:deletePost},index);})}),/*#__PURE__*/_jsx(Footer,{})]})});}","map":{"version":3,"names":["React","useState","useEffect","Test","Header","AiOutlineSearch","Footer","Name","jsx","_jsx","jsxs","_jsxs","MainPage","_useState","_useState2","_slicedToArray","originalPosts","setOriginalPosts","_useState3","_useState4","posts","setPosts","addPost","post","updatedPosts","concat","_toConsumableArray","localStorage","setItem","JSON","stringify","storedPosts","parse","getItem","deletePost","index","splice","editPost","updatedPost","_useState5","_useState6","searchTerm","setSearchTerm","handleSearch","e","searchText","target","value","toLowerCase","filteredPosts","filter","title","includes","className","children","icon","type","placeholder","onChange","link","name","map"],"sources":["/Users/seongsuk/SSAP-IDE-FrontEnd/front/src/page/main/MainPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Test from \"./Test\";\nimport Header from \"../../components/header/Header\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport \"./MainPage.css\";\nimport Footer from \"../../components/footer/Footer\";\nimport Name from \"../../components/form/Name\";\n\nexport default function MainPage() {\n  const [originalPosts, setOriginalPosts] = useState([]); // 초기 글 목록을 저장하는 상태 변수\n  const [posts, setPosts] = useState([]); // 글 목록을 상태로 관리\n  const addPost = (post) => {\n    const updatedPosts = [...posts, post];\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n  useEffect(() => {\n    // 페이지가 로드될 때 로컬 스토리지에서 데이터를 읽어옴\n    const storedPosts = JSON.parse(localStorage.getItem(\"posts\")) || [];\n    setPosts(storedPosts);\n  }, []);\n\n  const deletePost = (index) => {\n    // 해당 인덱스의 글을 삭제\n    const updatedPosts = [...posts];\n    updatedPosts.splice(index, 1);\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n\n  const editPost = (index, updatedPost) => {\n    // 해당 인덱스의 글을 수정\n    const updatedPosts = [...posts];\n    updatedPosts[index] = updatedPost;\n    setPosts(updatedPosts);\n\n    // 로컬 스토리지에 데이터 저장\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleSearch = (e) => {\n    const searchText = e.target.value.toLowerCase(); // 검색어를 소문자로 통일\n    setSearchTerm(searchText);\n\n    if (searchText === \"\") {\n      // 검색어가 비어있을 때, 초기 글 목록을 보여줍니다.\n      setPosts(originalPosts);\n    } else {\n      // 검색어에 해당하는 게시물만 필터링하여 업데이트합니다.\n      const filteredPosts = originalPosts.filter(\n        (post) => post.title.toLowerCase().includes(searchText), // 게시물의 title도 소문자로 통일하여 비교\n      );\n      setPosts(filteredPosts);\n    }\n  };\n\n  useEffect(() => {\n    // 페이지가 로드될 때 로컬 스토리지에서 데이터를 읽어와 originalPosts 상태에 설정합니다.\n    const storedPosts = JSON.parse(localStorage.getItem(\"posts\")) || [];\n    setPosts(storedPosts);\n    setOriginalPosts(storedPosts); // 초기 글 목록을 설정합니다.\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <div className=\"main-inner\">\n        <Header icon=\"모든 컨테이너\" />\n        <div className=\"main-middle\">\n          <div className=\"login-hd\">\n            <button>\n              <AiOutlineSearch />\n            </button>\n            <input\n              className=\"search\"\n              type=\"text\"\n              placeholder=\"컨테이너 이름\"\n              onChange={handleSearch}\n            ></input>\n          </div>\n          <Name\n            link=\"/containers\"\n            name=\"새 컨테이너\"\n            MainPage={MainPage}\n            addPost={addPost}\n          />\n        </div>\n        <div className=\"test-list\">\n          {posts.map((post, index) => (\n            <Test key={index} posts={[post]} deletePost={deletePost} />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}